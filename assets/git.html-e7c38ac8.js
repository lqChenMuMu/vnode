import{_ as e,r as t,o as i,c as o,a,b as s,d as r,e as l}from"./app-18d2fdb7.js";const p="/vnode/images/git_quick.png",c={},d=a("h1",{id:"git-速查手册",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#git-速查手册","aria-hidden":"true"},"#"),s(" Git 速查手册")],-1),u={href:"https://www.w3cschool.cn/git/git-cheat-sheet.html",target:"_blank",rel:"noopener noreferrer"},h=l('<p><img src="'+p+`" alt="git_quick"></p><h2 id="创建-create" tabindex="-1"><a class="header-anchor" href="#创建-create" aria-hidden="true">#</a> 创建 | CREATE</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> clone ssh://user@domain.com/xx.git 克隆远程仓库
$ <span class="token function">git</span> init 初始化本地 <span class="token function">git</span> 仓库（新建仓库）
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="本地更改-local-changes" tabindex="-1"><a class="header-anchor" href="#本地更改-local-changes" aria-hidden="true">#</a> 本地更改 | LOCAL CHANGES</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> status 查看当前版本状态（是否修改）
$ <span class="token function">git</span> <span class="token function">diff</span> 显示所有未添加至 index 的变更
$ <span class="token function">git</span> <span class="token function">diff</span> HEAD 查看已缓存的与未缓存的所有改动
$ <span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>path<span class="token operator">&gt;</span> 将该文件添加到缓存
$ <span class="token function">git</span> commit <span class="token parameter variable">-m</span> ‘xxx’ 提交
$ <span class="token function">git</span> commit <span class="token parameter variable">--amend</span> <span class="token parameter variable">-m</span> ‘xxx’ 合并上一次提交（用于反复修改）
$ <span class="token function">git</span> commit <span class="token parameter variable">-am</span> ‘xxx’ 将 <span class="token function">add</span> 和 commit 合为一步
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="提交历史记录-commit-history" tabindex="-1"><a class="header-anchor" href="#提交历史记录-commit-history" aria-hidden="true">#</a> 提交历史记录 | COMMIT HISTORY</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> log 显示日志
$ <span class="token function">git</span> show <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span> 显示某个提交的详细内容
$ <span class="token function">git</span> blame <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span> 在每一行显示 commit 号,提交者,最早提交日期
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="分支机构和标签-branches-tags" tabindex="-1"><a class="header-anchor" href="#分支机构和标签-branches-tags" aria-hidden="true">#</a> 分支机构和标签 | BRANCHES &amp; TAGS</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> branch 显示本地分支
$ <span class="token function">git</span> checkout <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> 切换分支
$ <span class="token function">git</span> branch <span class="token operator">&lt;</span>new-branch<span class="token operator">&gt;</span> 新建分支
$ <span class="token function">git</span> branch <span class="token parameter variable">--track</span> <span class="token operator">&lt;</span>new<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> 创建新分支跟踪远程分支
$ <span class="token function">git</span> branch <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> 删除本地分支
$ <span class="token function">git</span> tag <span class="token operator">&lt;</span>tag-name<span class="token operator">&gt;</span> 给当前分支打标签
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="更新和发布-update-publish" tabindex="-1"><a class="header-anchor" href="#更新和发布-update-publish" aria-hidden="true">#</a> 更新和发布 | UPDATE &amp; PUBLISH</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> remote <span class="token parameter variable">-v</span> 列出远程分支详细信息
$ <span class="token function">git</span> remote show <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> 显示某个分支信息
$ <span class="token function">git</span> remote <span class="token function">add</span> <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>url<span class="token operator">&gt;</span> 添加一个新的远程仓库
$ <span class="token function">git</span> fetch <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> 获取远程分支，但不更新本地分支，另需 merge
$ <span class="token function">git</span> pull <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> 获取远程分支，并更新本地分支
$ <span class="token function">git</span> push <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> 推送本地更新到远程分支
$ <span class="token function">git</span> push <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token parameter variable">--delete</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> 删除一个远程分支
$ <span class="token function">git</span> push <span class="token parameter variable">--tags</span> 推送本地标签
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="合并与衍合-merge-rebase" tabindex="-1"><a class="header-anchor" href="#合并与衍合-merge-rebase" aria-hidden="true">#</a> 合并与衍合 | MERGE &amp; REBASE</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> merge <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> 合并分支到当前分支，存在两个
$ <span class="token function">git</span> rebase <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> 合并分支到当前分支，存在一个
$ <span class="token function">git</span> rebase <span class="token parameter variable">--abort</span> 回到执行 rebase 之前
$ <span class="token function">git</span> rebase <span class="token parameter variable">--continue</span> 解决矛盾后继续执行 rebase
$ <span class="token function">git</span> mergetool 使用 mergetool 解决冲突
$ <span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>resolve-file<span class="token operator">&gt;</span> 使用冲突文件解决冲突
$ <span class="token function">git</span> <span class="token function">rm</span> <span class="token operator">&lt;</span>resolved-file<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="撤消-undo" tabindex="-1"><a class="header-anchor" href="#撤消-undo" aria-hidden="true">#</a> 撤消 | UNDO</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> reset <span class="token parameter variable">--hard</span> HEAD 将当前版本重置为 HEAD（用于 merge 失败）
$ <span class="token function">git</span> reset <span class="token parameter variable">--hard</span> <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span> 将当前版本重置至某一个提交状态<span class="token punctuation">(</span>慎用<span class="token operator">!</span><span class="token punctuation">)</span>
$ <span class="token function">git</span> reset <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span> 将当前版本重置至某一个提交状态，代码不变
$ <span class="token function">git</span> reset <span class="token parameter variable">--merge</span> <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span> 重置至某一状态,保留版本库中不同的文件
$ <span class="token function">git</span> reset <span class="token parameter variable">--keep</span> <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span> 重置至某一状态,重置变化的文件,代码改变
$ <span class="token function">git</span> checkout HEAD <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span> 丢弃本地更改信息并将其存入特定文件
$ <span class="token function">git</span> revert <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span> 撤消提交
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="帮助-help帮助-help" tabindex="-1"><a class="header-anchor" href="#帮助-help帮助-help" aria-hidden="true">#</a> 帮助 | HELP帮助 | HELP</h2><hr><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> <span class="token builtin class-name">help</span> <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>  获取命令行上的帮助
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题" aria-hidden="true">#</a> 常见问题</h2><h3 id="解决无法推送到远程仓库的问题" tabindex="-1"><a class="header-anchor" href="#解决无法推送到远程仓库的问题" aria-hidden="true">#</a> 解决无法推送到远程仓库的问题</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> pull <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span> --allow-unrelated-histories
<span class="token function">git</span> push <span class="token operator">&lt;</span>remote<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决冲突" tabindex="-1"><a class="header-anchor" href="#解决冲突" aria-hidden="true">#</a> 解决冲突</h3><ol><li>手动解决冲突</li><li>将冲突文件标记为已解决</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">add</span> <span class="token operator">&lt;</span>conflict-file<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="ssh无法连接到github" tabindex="-1"><a class="header-anchor" href="#ssh无法连接到github" aria-hidden="true">#</a> SSH无法连接到github</h3><p>情况如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">ssh</span> <span class="token parameter variable">-T</span> git@github.com
ssh: connect to <span class="token function">host</span> github.com port <span class="token number">22</span>: Connection timed out
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>解决方法</p><p>~/.ssh 文件夹下config文件，如果没有新建一个，配置下面的信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Host github.com
HostName ssh.github.com
User <span class="token function">git</span>
Port <span class="token number">443</span>
PreferredAuthentications publickey
IdentityFile ~/.ssh/id_rsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,37);function m(v,b){const n=t("ExternalLinkIcon");return i(),o("div",null,[d,a("p",null,[a("a",u,[s("w3school"),r(n)])]),h])}const k=e(c,[["render",m],["__file","git.html.vue"]]);export{k as default};
